{
	"operations": [
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/notifications/notification.graphql",
			"operationName": "getEthTransfersV2",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "owner",
					"type": "String!"
				}
			],
			"source": "query getEthTransfersV2($owner: String!) {\n  getEthTransfersV2(owner: $owner, filter: TO) {\n    __typename\n    transfers {\n      __typename\n      transfer {\n        __typename\n        transactionHash\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "getEthTransfersV2",
					"fieldName": "getEthTransfersV2",
					"type": "ETHTransfers!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "owner"
							},
							"type": "String"
						},
						{
							"name": "filter",
							"value": "TO",
							"type": "TransferFilter"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "transfers",
							"fieldName": "transfers",
							"type": "[EthTransfer]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "transfer",
									"fieldName": "transfer",
									"type": "Transfer!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "transactionHash",
											"fieldName": "transactionHash",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getEthTransfersV2($owner: String!) {\n  getEthTransfersV2(owner: $owner, filter: TO) {\n    __typename\n    transfers {\n      __typename\n      transfer {\n        __typename\n        transactionHash\n      }\n    }\n  }\n}",
			"operationId": "0ee6593c2581d74fd8fbdb8f4a14718e4eada8f78acb4481d0b733157471f5b8"
		},
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/notifications/notification.graphql",
			"operationName": "getTransactionDetails",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				}
			],
			"source": "query getTransactionDetails($hash: String!) {\n  getTransactionByHash(hash: $hash) {\n    __typename\n    blockHash\n    from\n    gas\n    gasPrice\n    gasUsed\n    timestamp\n    nonce\n    to\n    value\n    contractAddress\n    input\n    status\n  }\n}",
			"fields": [
				{
					"responseName": "getTransactionByHash",
					"fieldName": "getTransactionByHash",
					"type": "Tx!",
					"args": [
						{
							"name": "hash",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "blockHash",
							"fieldName": "blockHash",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "from",
							"fieldName": "from",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gas",
							"fieldName": "gas",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gasPrice",
							"fieldName": "gasPrice",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gasUsed",
							"fieldName": "gasUsed",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "timestamp",
							"fieldName": "timestamp",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "nonce",
							"fieldName": "nonce",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "to",
							"fieldName": "to",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "contractAddress",
							"fieldName": "contractAddress",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "input",
							"fieldName": "input",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "status",
							"fieldName": "status",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getTransactionDetails($hash: String!) {\n  getTransactionByHash(hash: $hash) {\n    __typename\n    blockHash\n    from\n    gas\n    gasPrice\n    gasUsed\n    timestamp\n    nonce\n    to\n    value\n    contractAddress\n    input\n    status\n  }\n}",
			"operationId": "98465082cb79f7b52db34d140918a62f0ab4d8a6865cd2bfd3f0406382a9b35b"
		},
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/notifications/notification.graphql",
			"operationName": "pendingTransaction",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "owner",
					"type": "String!"
				}
			],
			"source": "subscription pendingTransaction($owner: String!) {\n  pendingTransaction(owner: $owner) {\n    __typename\n    transactionHash\n    from\n    to\n    txFee\n    value\n    timestamp\n  }\n}",
			"fields": [
				{
					"responseName": "pendingTransaction",
					"fieldName": "pendingTransaction",
					"type": "PendingTransfer!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "owner"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "transactionHash",
							"fieldName": "transactionHash",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "from",
							"fieldName": "from",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "to",
							"fieldName": "to",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "txFee",
							"fieldName": "txFee",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "timestamp",
							"fieldName": "timestamp",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription pendingTransaction($owner: String!) {\n  pendingTransaction(owner: $owner) {\n    __typename\n    transactionHash\n    from\n    to\n    txFee\n    value\n    timestamp\n  }\n}",
			"operationId": "e6c29cb9ee8a3f18b7a7b797bf8d5eaf4b6b2839d88ebcaca3ae1095bf978919"
		},
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/notifications/notification.graphql",
			"operationName": "transactionEvent",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				}
			],
			"source": "subscription transactionEvent($hash: String!) {\n  transactionEvent(hash: $hash)\n}",
			"fields": [
				{
					"responseName": "transactionEvent",
					"fieldName": "transactionEvent",
					"type": "String!",
					"args": [
						{
							"name": "hash",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription transactionEvent($hash: String!) {\n  transactionEvent(hash: $hash)\n}",
			"operationId": "3fbae1793eb1f34e67e5f20462838475cdd6681f732acc0fb283622c57fff403"
		},
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/tokens/tokens.graphql",
			"operationName": "getLatestPrices",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query getLatestPrices {\n  getLatestPrices {\n    __typename\n    id\n    symbol\n    name\n    image\n    contract\n    current_price\n    market_cap\n    total_volume\n    price_change_24h\n    total_supply\n  }\n}",
			"fields": [
				{
					"responseName": "getLatestPrices",
					"fieldName": "getLatestPrices",
					"type": "[TokenMarketInfo]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "symbol",
							"fieldName": "symbol",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "image",
							"fieldName": "image",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "contract",
							"fieldName": "contract",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "current_price",
							"fieldName": "current_price",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "market_cap",
							"fieldName": "market_cap",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "total_volume",
							"fieldName": "total_volume",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "price_change_24h",
							"fieldName": "price_change_24h",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "total_supply",
							"fieldName": "total_supply",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getLatestPrices {\n  getLatestPrices {\n    __typename\n    id\n    symbol\n    name\n    image\n    contract\n    current_price\n    market_cap\n    total_volume\n    price_change_24h\n    total_supply\n  }\n}",
			"operationId": "402f0593f5157e7ec00b832e8e83a5bc180d9b76afdeff94a923ebedcfb05bd7"
		},
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/tokens/tokens.graphql",
			"operationName": "getOwnersERC20Tokens",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				},
				{
					"name": "_nextKey",
					"type": "String"
				}
			],
			"source": "query getOwnersERC20Tokens($hash: String!, $_nextKey: String) {\n  getOwnersERC20Tokens(owner: $hash, nextKey: $_nextKey) {\n    __typename\n    owners {\n      __typename\n      tokenInfo {\n        __typename\n        ...TokenFragment\n        contract\n      }\n      balance\n    }\n    nextKey\n  }\n}",
			"fields": [
				{
					"responseName": "getOwnersERC20Tokens",
					"fieldName": "getOwnersERC20Tokens",
					"type": "ERC20TokenOwners!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						},
						{
							"name": "nextKey",
							"value": {
								"kind": "Variable",
								"variableName": "_nextKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"description": "Returns a list of all ERC20Tokens owned by an address",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "owners",
							"fieldName": "owners",
							"type": "[ERC20TokenBalance]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "tokenInfo",
									"fieldName": "tokenInfo",
									"type": "EthTokenInfo!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "contract",
											"fieldName": "contract",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [
										"TokenFragment"
									],
									"inlineFragments": []
								},
								{
									"responseName": "balance",
									"fieldName": "balance",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "nextKey",
							"fieldName": "nextKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"TokenFragment"
			],
			"sourceWithFragments": "query getOwnersERC20Tokens($hash: String!, $_nextKey: String) {\n  getOwnersERC20Tokens(owner: $hash, nextKey: $_nextKey) {\n    __typename\n    owners {\n      __typename\n      tokenInfo {\n        __typename\n        ...TokenFragment\n        contract\n      }\n      balance\n    }\n    nextKey\n  }\n}\nfragment TokenFragment on EthTokenInfo {\n  __typename\n  name\n  symbol\n  decimals\n}",
			"operationId": "e4101db0908e197d2029ecaa177d66a6f12d1794f28b9cadf3a5e658e79c3e37"
		},
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/wallets/wallets.graphql",
			"operationName": "getEthBalance",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				}
			],
			"source": "query getEthBalance($hash: String!) {\n  getEthBalance(owner: $hash) {\n    __typename\n    balance\n  }\n}",
			"fields": [
				{
					"responseName": "getEthBalance",
					"fieldName": "getEthBalance",
					"type": "EthOwner!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"description": "------------------------------------------------\nETH:\n------------------------------------------------",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "balance",
							"fieldName": "balance",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getEthBalance($hash: String!) {\n  getEthBalance(owner: $hash) {\n    __typename\n    balance\n  }\n}",
			"operationId": "e577a92be9f5470547613c7e15fce43c50f910c2f78d61043d7bcc55c7a3b742"
		},
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/wallets/wallets.graphql",
			"operationName": "getUSDPrice",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query getUSDPrice {\n  getLatestPrices {\n    __typename\n    id\n    current_price\n    market_cap\n    price_change_24h\n  }\n}",
			"fields": [
				{
					"responseName": "getLatestPrices",
					"fieldName": "getLatestPrices",
					"type": "[TokenMarketInfo]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "current_price",
							"fieldName": "current_price",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "market_cap",
							"fieldName": "market_cap",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "price_change_24h",
							"fieldName": "price_change_24h",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getUSDPrice {\n  getLatestPrices {\n    __typename\n    id\n    current_price\n    market_cap\n    price_change_24h\n  }\n}",
			"operationId": "26a9b515a72e9321f2215d7f56d2c1cfc2de061f8b237b44f37cbab310abc4a0"
		},
		{
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/wallets/wallets.graphql",
			"operationName": "getBalanceHistory",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "timeString",
					"type": "Int!"
				},
				{
					"name": "todaysDate",
					"type": "Int!"
				},
				{
					"name": "key",
					"type": "String!"
				},
				{
					"name": "scale",
					"type": "TimeseriesScale!"
				},
				{
					"name": "_nextKey",
					"type": "String"
				}
			],
			"source": "query getBalanceHistory($timeString: Int!, $todaysDate: Int!, $key: String!, $scale: TimeseriesScale!, $_nextKey: String) {\n  getTimeseriesData(\n    fromT: $timeString\n    toT: $todaysDate\n    key: $key\n    scale: $scale\n    nextKey: $_nextKey\n  ) {\n    __typename\n    items {\n      __typename\n      value\n      timestamp\n    }\n    nextKey\n  }\n}",
			"fields": [
				{
					"responseName": "getTimeseriesData",
					"fieldName": "getTimeseriesData",
					"type": "TimeseriesResponse!",
					"args": [
						{
							"name": "fromT",
							"value": {
								"kind": "Variable",
								"variableName": "timeString"
							},
							"type": "Int!"
						},
						{
							"name": "toT",
							"value": {
								"kind": "Variable",
								"variableName": "todaysDate"
							},
							"type": "Int"
						},
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "key"
							},
							"type": "String!"
						},
						{
							"name": "scale",
							"value": {
								"kind": "Variable",
								"variableName": "scale"
							},
							"type": "TimeseriesScale!"
						},
						{
							"name": "nextKey",
							"value": {
								"kind": "Variable",
								"variableName": "_nextKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[TimeseriesData]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "value",
									"fieldName": "value",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "timestamp",
									"fieldName": "timestamp",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "nextKey",
							"fieldName": "nextKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getBalanceHistory($timeString: Int!, $todaysDate: Int!, $key: String!, $scale: TimeseriesScale!, $_nextKey: String) {\n  getTimeseriesData(\n    fromT: $timeString\n    toT: $todaysDate\n    key: $key\n    scale: $scale\n    nextKey: $_nextKey\n  ) {\n    __typename\n    items {\n      __typename\n      value\n      timestamp\n    }\n    nextKey\n  }\n}",
			"operationId": "d2ef9064f951316fd0fe05613922abf01c45d121000095aa76c49b09b9f56ede"
		}
	],
	"fragments": [
		{
			"typeCondition": "EthTokenInfo",
			"possibleTypes": [
				"EthTokenInfo"
			],
			"fragmentName": "TokenFragment",
			"filePath": "file:///Users/yelpadillo/workspace/work/myetherwalletv6/src/apollo/queries/tokens/tokens.graphql",
			"source": "fragment TokenFragment on EthTokenInfo {\n  __typename\n  name\n  symbol\n  decimals\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "symbol",
					"fieldName": "symbol",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "decimals",
					"fieldName": "decimals",
					"type": "Int",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		}
	],
	"typesUsed": [
		{
			"kind": "EnumType",
			"name": "TimeseriesScale",
			"values": [
				{
					"name": "seconds",
					"isDeprecated": false
				},
				{
					"name": "minutes",
					"isDeprecated": false
				},
				{
					"name": "hours",
					"isDeprecated": false
				},
				{
					"name": "days",
					"isDeprecated": false
				}
			]
		}
	],
	"unionTypes": [],
	"interfaceTypes": []
}