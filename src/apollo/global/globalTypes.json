{
	"operations": [
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/notifications/notification.graphql",
			"operationName": "getEthTransfersV2",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "owner",
					"type": "String!"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "nextKey",
					"type": "String"
				}
			],
			"source": "query getEthTransfersV2($owner: String!, $limit: Int, $nextKey: String) {\n  getEthTransfersV2(owner: $owner, filter: TO, limit: $limit, nextKey: $nextKey) {\n    __typename\n    transfers {\n      __typename\n      transfer {\n        __typename\n        transactionHash\n      }\n    }\n    nextKey\n  }\n}",
			"fields": [
				{
					"responseName": "getEthTransfersV2",
					"fieldName": "getEthTransfersV2",
					"type": "ETHTransfers!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "owner"
							},
							"type": "String"
						},
						{
							"name": "filter",
							"value": "TO",
							"type": "TransferFilter"
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							},
							"type": "Int"
						},
						{
							"name": "nextKey",
							"value": {
								"kind": "Variable",
								"variableName": "nextKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "transfers",
							"fieldName": "transfers",
							"type": "[EthTransfer]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "transfer",
									"fieldName": "transfer",
									"type": "Transfer!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "transactionHash",
											"fieldName": "transactionHash",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "nextKey",
							"fieldName": "nextKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getEthTransfersV2($owner: String!, $limit: Int, $nextKey: String) {\n  getEthTransfersV2(owner: $owner, filter: TO, limit: $limit, nextKey: $nextKey) {\n    __typename\n    transfers {\n      __typename\n      transfer {\n        __typename\n        transactionHash\n      }\n    }\n    nextKey\n  }\n}",
			"operationId": "427e1182d2888e8d674ac4dfd75661ebd89cf88f4735054bb82b8c609b76c19c"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/notifications/notification.graphql",
			"operationName": "getTransactionsByHashes",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "hashes",
					"type": "[String]!"
				}
			],
			"source": "query getTransactionsByHashes($hashes: [String]!) {\n  getTransactionsByHashes(hashes: $hashes) {\n    __typename\n    from\n    gas\n    gasPrice\n    gasUsed\n    hash\n    timestamp\n    nonce\n    to\n    value\n    input\n    status\n  }\n}",
			"fields": [
				{
					"responseName": "getTransactionsByHashes",
					"fieldName": "getTransactionsByHashes",
					"type": "[Tx]!",
					"args": [
						{
							"name": "hashes",
							"value": {
								"kind": "Variable",
								"variableName": "hashes"
							},
							"type": "[String]!"
						}
					],
					"isConditional": false,
					"description": "------------------------------------------------\nTransaction:\n------------------------------------------------",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "from",
							"fieldName": "from",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gas",
							"fieldName": "gas",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gasPrice",
							"fieldName": "gasPrice",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gasUsed",
							"fieldName": "gasUsed",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "hash",
							"fieldName": "hash",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "timestamp",
							"fieldName": "timestamp",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "nonce",
							"fieldName": "nonce",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "to",
							"fieldName": "to",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "input",
							"fieldName": "input",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "status",
							"fieldName": "status",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getTransactionsByHashes($hashes: [String]!) {\n  getTransactionsByHashes(hashes: $hashes) {\n    __typename\n    from\n    gas\n    gasPrice\n    gasUsed\n    hash\n    timestamp\n    nonce\n    to\n    value\n    input\n    status\n  }\n}",
			"operationId": "51943e1de36a615836301c276f85d02e3ebf262828fb6e61c16dbacb2a87a11b"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/notifications/notification.graphql",
			"operationName": "getTransactionByHash",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				}
			],
			"source": "query getTransactionByHash($hash: String!) {\n  getTransactionByHash(hash: $hash) {\n    __typename\n    from\n    gas\n    gasPrice\n    gasUsed\n    hash\n    timestamp\n    nonce\n    to\n    value\n    input\n    status\n  }\n}",
			"fields": [
				{
					"responseName": "getTransactionByHash",
					"fieldName": "getTransactionByHash",
					"type": "Tx!",
					"args": [
						{
							"name": "hash",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "from",
							"fieldName": "from",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gas",
							"fieldName": "gas",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gasPrice",
							"fieldName": "gasPrice",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "gasUsed",
							"fieldName": "gasUsed",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "hash",
							"fieldName": "hash",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "timestamp",
							"fieldName": "timestamp",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "nonce",
							"fieldName": "nonce",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "to",
							"fieldName": "to",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "input",
							"fieldName": "input",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "status",
							"fieldName": "status",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getTransactionByHash($hash: String!) {\n  getTransactionByHash(hash: $hash) {\n    __typename\n    from\n    gas\n    gasPrice\n    gasUsed\n    hash\n    timestamp\n    nonce\n    to\n    value\n    input\n    status\n  }\n}",
			"operationId": "1bf6909a2e3d13979734b6821cc30e3869fd92b7bd8df8834a26b805da2a735a"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/notifications/notification.graphql",
			"operationName": "pendingTransaction",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "owner",
					"type": "String!"
				}
			],
			"source": "subscription pendingTransaction($owner: String!) {\n  pendingTransaction(owner: $owner) {\n    __typename\n    transactionHash\n    from\n    to\n    txFee\n    value\n    timestamp\n  }\n}",
			"fields": [
				{
					"responseName": "pendingTransaction",
					"fieldName": "pendingTransaction",
					"type": "PendingTransfer!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "owner"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "transactionHash",
							"fieldName": "transactionHash",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "from",
							"fieldName": "from",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "to",
							"fieldName": "to",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "txFee",
							"fieldName": "txFee",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "timestamp",
							"fieldName": "timestamp",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription pendingTransaction($owner: String!) {\n  pendingTransaction(owner: $owner) {\n    __typename\n    transactionHash\n    from\n    to\n    txFee\n    value\n    timestamp\n  }\n}",
			"operationId": "e6c29cb9ee8a3f18b7a7b797bf8d5eaf4b6b2839d88ebcaca3ae1095bf978919"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/notifications/notification.graphql",
			"operationName": "transactionEvent",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				}
			],
			"source": "subscription transactionEvent($hash: String!) {\n  transactionEvent(hash: $hash)\n}",
			"fields": [
				{
					"responseName": "transactionEvent",
					"fieldName": "transactionEvent",
					"type": "String!",
					"args": [
						{
							"name": "hash",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription transactionEvent($hash: String!) {\n  transactionEvent(hash: $hash)\n}",
			"operationId": "3fbae1793eb1f34e67e5f20462838475cdd6681f732acc0fb283622c57fff403"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/tokens/tokens.graphql",
			"operationName": "getLatestPrices",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query getLatestPrices {\n  getLatestPrices {\n    __typename\n    id\n    symbol\n    name\n    image\n    contract\n    current_price\n    market_cap\n    total_volume\n    price_change_24h\n    total_supply\n  }\n}",
			"fields": [
				{
					"responseName": "getLatestPrices",
					"fieldName": "getLatestPrices",
					"type": "[TokenMarketInfo]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "symbol",
							"fieldName": "symbol",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "image",
							"fieldName": "image",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "contract",
							"fieldName": "contract",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "current_price",
							"fieldName": "current_price",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "market_cap",
							"fieldName": "market_cap",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "total_volume",
							"fieldName": "total_volume",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "price_change_24h",
							"fieldName": "price_change_24h",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "total_supply",
							"fieldName": "total_supply",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getLatestPrices {\n  getLatestPrices {\n    __typename\n    id\n    symbol\n    name\n    image\n    contract\n    current_price\n    market_cap\n    total_volume\n    price_change_24h\n    total_supply\n  }\n}",
			"operationId": "402f0593f5157e7ec00b832e8e83a5bc180d9b76afdeff94a923ebedcfb05bd7"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/tokens/tokens.graphql",
			"operationName": "getOwnersERC20Tokens",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				},
				{
					"name": "_nextKey",
					"type": "String"
				}
			],
			"source": "query getOwnersERC20Tokens($hash: String!, $_nextKey: String) {\n  getOwnersERC20Tokens(owner: $hash, nextKey: $_nextKey) {\n    __typename\n    owners {\n      __typename\n      tokenInfo {\n        __typename\n        ...TokenFragment\n        contract\n      }\n      balance\n    }\n    nextKey\n  }\n}",
			"fields": [
				{
					"responseName": "getOwnersERC20Tokens",
					"fieldName": "getOwnersERC20Tokens",
					"type": "ERC20TokenOwners!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						},
						{
							"name": "nextKey",
							"value": {
								"kind": "Variable",
								"variableName": "_nextKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"description": "Returns a list of all ERC20Tokens owned by an address",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "owners",
							"fieldName": "owners",
							"type": "[ERC20TokenBalance]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "tokenInfo",
									"fieldName": "tokenInfo",
									"type": "EthTokenInfo!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "contract",
											"fieldName": "contract",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [
										"TokenFragment"
									],
									"inlineFragments": []
								},
								{
									"responseName": "balance",
									"fieldName": "balance",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "nextKey",
							"fieldName": "nextKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"TokenFragment"
			],
			"sourceWithFragments": "query getOwnersERC20Tokens($hash: String!, $_nextKey: String) {\n  getOwnersERC20Tokens(owner: $hash, nextKey: $_nextKey) {\n    __typename\n    owners {\n      __typename\n      tokenInfo {\n        __typename\n        ...TokenFragment\n        contract\n      }\n      balance\n    }\n    nextKey\n  }\n}\nfragment TokenFragment on EthTokenInfo {\n  __typename\n  name\n  symbol\n}",
			"operationId": "d99d19a9e0feac2ca082d58b84760a083d278140d40b800a6f73673f80a7977b"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/tokens721/tokens721.graphql",
			"operationName": "getOwnersERC721Balances",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				}
			],
			"source": "query getOwnersERC721Balances($hash: String!) {\n  getOwnersERC721Balances(owner: $hash) {\n    __typename\n    tokenInfo {\n      __typename\n      ...TokenFragment\n      contract\n    }\n    owner\n    balance\n  }\n}",
			"fields": [
				{
					"responseName": "getOwnersERC721Balances",
					"fieldName": "getOwnersERC721Balances",
					"type": "[ERC721TokenBalance]!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"description": "Returns a list of ERC721 balances",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "tokenInfo",
							"fieldName": "tokenInfo",
							"type": "EthTokenInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "contract",
									"fieldName": "contract",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [
								"TokenFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "owner",
							"fieldName": "owner",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "balance",
							"fieldName": "balance",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"TokenFragment"
			],
			"sourceWithFragments": "query getOwnersERC721Balances($hash: String!) {\n  getOwnersERC721Balances(owner: $hash) {\n    __typename\n    tokenInfo {\n      __typename\n      ...TokenFragment\n      contract\n    }\n    owner\n    balance\n  }\n}\nfragment TokenFragment on EthTokenInfo {\n  __typename\n  name\n  symbol\n}",
			"operationId": "fe2fb6e18432e12f2dbf1cee4a5d4c13446aff610399c4398899a4380f500418"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/tokens721/tokens721.graphql",
			"operationName": "getOwnersERC721Tokens",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "owner",
					"type": "String!"
				},
				{
					"name": "contract",
					"type": "String"
				},
				{
					"name": "nextKey",
					"type": "String"
				}
			],
			"source": "query getOwnersERC721Tokens($owner: String!, $contract: String, $nextKey: String) {\n  getOwnersERC721Tokens(owner: $owner, contract: $contract, nextKey: $nextKey) {\n    __typename\n    tokens {\n      __typename\n      tokenInfo {\n        __typename\n        name\n        symbol\n        decimals\n        totalSupply\n        contract\n      }\n      owner\n      token\n    }\n    nextKey\n  }\n}",
			"fields": [
				{
					"responseName": "getOwnersERC721Tokens",
					"fieldName": "getOwnersERC721Tokens",
					"type": "ERC721TokenContract!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "owner"
							},
							"type": "String!"
						},
						{
							"name": "contract",
							"value": {
								"kind": "Variable",
								"variableName": "contract"
							},
							"type": "String"
						},
						{
							"name": "nextKey",
							"value": {
								"kind": "Variable",
								"variableName": "nextKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"description": "Returns a list of all ERC721 Tokens owned by an address",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "tokens",
							"fieldName": "tokens",
							"type": "[ERC721TokenOwner]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "tokenInfo",
									"fieldName": "tokenInfo",
									"type": "EthTokenInfo!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "symbol",
											"fieldName": "symbol",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "decimals",
											"fieldName": "decimals",
											"type": "Int",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "totalSupply",
											"fieldName": "totalSupply",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "contract",
											"fieldName": "contract",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "owner",
									"fieldName": "owner",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "token",
									"fieldName": "token",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "nextKey",
							"fieldName": "nextKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getOwnersERC721Tokens($owner: String!, $contract: String, $nextKey: String) {\n  getOwnersERC721Tokens(owner: $owner, contract: $contract, nextKey: $nextKey) {\n    __typename\n    tokens {\n      __typename\n      tokenInfo {\n        __typename\n        name\n        symbol\n        decimals\n        totalSupply\n        contract\n      }\n      owner\n      token\n    }\n    nextKey\n  }\n}",
			"operationId": "856d484c34bfcbbceeb0e29c60cb0ce77f0adc80775a12cabeab27e5a237862f"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/wallets/wallets.graphql",
			"operationName": "getEthBalance",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "hash",
					"type": "String!"
				}
			],
			"source": "query getEthBalance($hash: String!) {\n  getEthBalance(owner: $hash) {\n    __typename\n    balance\n  }\n}",
			"fields": [
				{
					"responseName": "getEthBalance",
					"fieldName": "getEthBalance",
					"type": "EthOwner!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "hash"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"description": "------------------------------------------------\nETH:\n------------------------------------------------",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "balance",
							"fieldName": "balance",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getEthBalance($hash: String!) {\n  getEthBalance(owner: $hash) {\n    __typename\n    balance\n  }\n}",
			"operationId": "e577a92be9f5470547613c7e15fce43c50f910c2f78d61043d7bcc55c7a3b742"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/wallets/wallets.graphql",
			"operationName": "getUSDPrice",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query getUSDPrice {\n  getLatestPrices {\n    __typename\n    id\n    current_price\n    market_cap\n    price_change_24h\n  }\n}",
			"fields": [
				{
					"responseName": "getLatestPrices",
					"fieldName": "getLatestPrices",
					"type": "[TokenMarketInfo]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "current_price",
							"fieldName": "current_price",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "market_cap",
							"fieldName": "market_cap",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "price_change_24h",
							"fieldName": "price_change_24h",
							"type": "Float",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getUSDPrice {\n  getLatestPrices {\n    __typename\n    id\n    current_price\n    market_cap\n    price_change_24h\n  }\n}",
			"operationId": "26a9b515a72e9321f2215d7f56d2c1cfc2de061f8b237b44f37cbab310abc4a0"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/wallets/wallets.graphql",
			"operationName": "getBalanceHistory",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "timeString",
					"type": "Int!"
				},
				{
					"name": "todaysDate",
					"type": "Int!"
				},
				{
					"name": "key",
					"type": "String!"
				},
				{
					"name": "scale",
					"type": "TimeseriesScale!"
				},
				{
					"name": "_nextKey",
					"type": "String"
				}
			],
			"source": "query getBalanceHistory($timeString: Int!, $todaysDate: Int!, $key: String!, $scale: TimeseriesScale!, $_nextKey: String) {\n  getTimeseriesData(\n    fromT: $timeString\n    toT: $todaysDate\n    key: $key\n    scale: $scale\n    nextKey: $_nextKey\n  ) {\n    __typename\n    items {\n      __typename\n      value\n      timestamp\n    }\n    nextKey\n  }\n}",
			"fields": [
				{
					"responseName": "getTimeseriesData",
					"fieldName": "getTimeseriesData",
					"type": "TimeseriesResponse!",
					"args": [
						{
							"name": "fromT",
							"value": {
								"kind": "Variable",
								"variableName": "timeString"
							},
							"type": "Int!"
						},
						{
							"name": "toT",
							"value": {
								"kind": "Variable",
								"variableName": "todaysDate"
							},
							"type": "Int"
						},
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "key"
							},
							"type": "String!"
						},
						{
							"name": "scale",
							"value": {
								"kind": "Variable",
								"variableName": "scale"
							},
							"type": "TimeseriesScale!"
						},
						{
							"name": "nextKey",
							"value": {
								"kind": "Variable",
								"variableName": "_nextKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[TimeseriesData]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "value",
									"fieldName": "value",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "timestamp",
									"fieldName": "timestamp",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "nextKey",
							"fieldName": "nextKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query getBalanceHistory($timeString: Int!, $todaysDate: Int!, $key: String!, $scale: TimeseriesScale!, $_nextKey: String) {\n  getTimeseriesData(\n    fromT: $timeString\n    toT: $todaysDate\n    key: $key\n    scale: $scale\n    nextKey: $_nextKey\n  ) {\n    __typename\n    items {\n      __typename\n      value\n      timestamp\n    }\n    nextKey\n  }\n}",
			"operationId": "d2ef9064f951316fd0fe05613922abf01c45d121000095aa76c49b09b9f56ede"
		},
		{
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/wallets/wallets.graphql",
			"operationName": "subscribeToAccountBalance",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "owner",
					"type": "String!"
				},
				{
					"name": "event",
					"type": "AddressEventType!"
				}
			],
			"source": "subscription subscribeToAccountBalance($owner: String!, $event: AddressEventType!) {\n  addressEvent(owner: $owner, event: $event) {\n    __typename\n    blockNumber\n  }\n}",
			"fields": [
				{
					"responseName": "addressEvent",
					"fieldName": "addressEvent",
					"type": "AddressEvent!",
					"args": [
						{
							"name": "owner",
							"value": {
								"kind": "Variable",
								"variableName": "owner"
							},
							"type": "String!"
						},
						{
							"name": "event",
							"value": {
								"kind": "Variable",
								"variableName": "event"
							},
							"type": "AddressEventType"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "blockNumber",
							"fieldName": "blockNumber",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription subscribeToAccountBalance($owner: String!, $event: AddressEventType!) {\n  addressEvent(owner: $owner, event: $event) {\n    __typename\n    blockNumber\n  }\n}",
			"operationId": "7ebb928f3a8acc6f5628038cc75e020325df8e2fd283a8b7bfa9ae848df51663"
		}
	],
	"fragments": [
		{
			"typeCondition": "EthTokenInfo",
			"possibleTypes": [
				"EthTokenInfo"
			],
			"fragmentName": "TokenFragment",
			"filePath": "file:///Users/jessicapeng/MyEtherWallet/src/apollo/queries/tokens721/tokens721.graphql",
			"source": "fragment TokenFragment on EthTokenInfo {\n  __typename\n  name\n  symbol\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "symbol",
					"fieldName": "symbol",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		}
	],
	"typesUsed": [
		{
			"kind": "EnumType",
			"name": "TimeseriesScale",
			"values": [
				{
					"name": "seconds",
					"isDeprecated": false
				},
				{
					"name": "minutes",
					"isDeprecated": false
				},
				{
					"name": "hours",
					"isDeprecated": false
				},
				{
					"name": "days",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "AddressEventType",
			"values": [
				{
					"name": "NEW_ETH_TRANSFER",
					"isDeprecated": false
				},
				{
					"name": "NEW_ERC20_TRANSFER",
					"isDeprecated": false
				},
				{
					"name": "NEW_ERC721_TRANSFER",
					"isDeprecated": false
				},
				{
					"name": "NEW_MINED_BLOCK",
					"isDeprecated": false
				},
				{
					"name": "NEW_MINED_UNCLE",
					"isDeprecated": false
				}
			]
		}
	],
	"unionTypes": [],
	"interfaceTypes": []
}